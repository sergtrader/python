# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
from math import sqrt
sp1 = [2, -5, 8, 9, -25, 25, 4]
sp2 = []
for x in sp1:
    if x < 0:
        continue
    if x == int(sqrt(x))**2:
        sp2.append(int(sqrt(x)))
	

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)
date = "30.11.2013"

srtdate = ""

days = ["первое","второе","третье","четверное","пятое","шестое","седьмое","восьмое", \
       "девятое","десятое","одинадцатое","двенадцатое","тринадцатое","четырнадцатое", \
       "пятнадцатое","шестьнадцатое","семнадцатое","весемьнадцатое","девятнадцатое", \
       "двадцатое","двадцать","тридцатое","тридцать"]

months = {"01":"января","02":"февраля","03":"марта","04":"апреля","05":"мая", \
         "06":"июнь","07":"июля","08":"августа","09":"сентября","10":"октября", \
         "11":"ноября","12":"декабря",}

day = int(date[0:2])
if day <= 20:
    strdate = days[day - 1]
elif day < 30:
    strdate = days[20] + " " + days[day - 21]
elif day == 30:
    strdate = days[21]
else:
    strdate = days[22]       
    
print(strdate + " " +months[date[3:5]] + " " + date[6:] + " года")


# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

from random import randint
list1 = []
n = int(input("Сколько чисел нужно добавить в список: "))
while n > 0:
    list1.append(randint(-100, 100))
    n -= 1

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]
    
lst = [1, 2, 4, 5, 6, 2, 5, 2]
lst2 = list(set(lst))

lst_no_rep = []
lst_rep = []
for m in lst:
    if m not in lst_rep:
        lst_no_rep.append(m)
    else:
        if m in lst_no_rep:
            lst_no_rep.remove(m)
    lst_rep.append(m)
print(lst_no_rep)
    
             

    
